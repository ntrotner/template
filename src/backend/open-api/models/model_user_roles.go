// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: nikita@ttnr.me
 */

package openapi


import (
	"fmt"
)



type UserRoles string

// List of UserRoles
const (
	ADMIN UserRoles = "admin"
	USER UserRoles = "user"
	UNCONFIRMED UserRoles = "unconfirmed"
)

// AllowedUserRolesEnumValues is all the allowed values of UserRoles enum
var AllowedUserRolesEnumValues = []UserRoles{
	"admin",
	"user",
	"unconfirmed",
}

// validUserRolesEnumValue provides a map of UserRoless for fast verification of use input
var validUserRolesEnumValues = map[UserRoles]struct{}{
	"admin": {},
	"user": {},
	"unconfirmed": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UserRoles) IsValid() bool {
	_, ok := validUserRolesEnumValues[v]
	return ok
}

// NewUserRolesFromValue returns a pointer to a valid UserRoles
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUserRolesFromValue(v string) (UserRoles, error) {
	ev := UserRoles(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for UserRoles: valid values are %v", v, AllowedUserRolesEnumValues)
}



// AssertUserRolesRequired checks if the required fields are not zero-ed
func AssertUserRolesRequired(obj UserRoles) error {
	return nil
}

// AssertUserRolesConstraints checks if the values respects the defined constraints
func AssertUserRolesConstraints(obj UserRoles) error {
	return nil
}
