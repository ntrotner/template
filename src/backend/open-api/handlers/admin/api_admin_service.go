/*
 * Swagger - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: nikita@ttnr.me
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
	models "template_backend/open-api/models"
)

// AdminAPIRouter defines the required methods for binding the api requests to a responses for the AdminAPI
// The AdminAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AdminAPIServicer to perform the required actions, then write the service results to the http response.
type AdminAPIRouter interface {
	AdminGetUsers(http.ResponseWriter, *http.Request)
	ChangeRole(http.ResponseWriter, *http.Request)
	AdminGetMetadata(http.ResponseWriter, *http.Request)
	AdminChangeMetadata(http.ResponseWriter, *http.Request)
}

// AdminAPIServicer defines the api actions for the AdminAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AdminAPIServicer interface {
	AdminGetUsers(context.Context) (models.ImplResponse, error)
	ChangeRole(context.Context) (models.ImplResponse, error)
	AdminGetMetadata(context.Context) (models.ImplResponse, error)
	AdminChangeMetadata(context.Context) (models.ImplResponse, error)
}

// AdminAPIService is a service that implements the logic for the AdminAPIServicer
// This service should implement the business logic for every endpoint for the AdminAPI API.
// Include any external packages or services that will be required by this service.
type AdminAPIService struct {
}

// NewAdminAPIService creates a default api service
func NewAdminAPIService() *AdminAPIService {
	return &AdminAPIService{}
}

// AdminGetUsers - Get user roles
func (s *AdminAPIService) AdminGetUsers(ctx context.Context) (models.ImplResponse, error) {
	// TODO - update AdminGetUsers with the required logic for this service method.
	// Add api_admin_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AdminUsers{}) or use other options such as http.Ok ...
	// return Response(200, AdminUsers{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	return models.Response(http.StatusNotImplemented, nil), errors.New("AdminGetUsers method not implemented")
}

// ChangeRole - Change user role
func (s *AdminAPIService) ChangeRole(ctx context.Context) (models.ImplResponse, error) {
	// TODO - update ChangeRole with the required logic for this service method.
	// Add api_admin_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AdminChangeRole{}) or use other options such as http.Ok ...
	// return Response(200, AdminChangeRole{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	return models.Response(http.StatusNotImplemented, nil), errors.New("ChangeRole method not implemented")
}

// AdminGetMetadata - Get backend metadata
func (s *AdminAPIService) AdminGetMetadata(ctx context.Context) (models.ImplResponse, error) {
	// TODO - update AdminGetMetadata with the required logic for this service method.
	// Add api_admin_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []MetadataItem{}) or use other options such as http.Ok ...
	// return Response(200, []MetadataItem{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	return models.Response(http.StatusNotImplemented, nil), errors.New("AdminGetMetadata method not implemented")
}

// AdminChangeMetadata - Change backend metadata
func (s *AdminAPIService) AdminChangeMetadata(ctx context.Context) (models.ImplResponse, error) {
	// TODO - update AdminChangeMetadata with the required logic for this service method.
	// Add api_admin_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []MetadataItem{}) or use other options such as http.Ok ...
	// return Response(200, []MetadataItem{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	return models.Response(http.StatusNotImplemented, nil), errors.New("AdminChangeMetadata method not implemented")
}
