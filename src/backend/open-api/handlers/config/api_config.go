/*
 * Swagger - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: nikita@ttnr.me
 */

package openapi

import (
	"net/http"
	"strings"
	runtime "template_backend/open-api/runtime"
)

// ConfigAPIController binds http requests to an api service and writes the service results to the http response
type ConfigAPIController struct {
	service      ConfigAPIServicer
	errorHandler runtime.ErrorHandler
}

// ConfigAPIOption for how the controller is set up.
type ConfigAPIOption func(*ConfigAPIController)

// WithConfigAPIErrorHandler inject ErrorHandler into controller
func WithConfigAPIErrorHandler(h runtime.ErrorHandler) ConfigAPIOption {
	return func(c *ConfigAPIController) {
		c.errorHandler = h
	}
}

// NewConfigAPIController creates a default api controller
func NewConfigAPIController(s ConfigAPIServicer, opts ...ConfigAPIOption) *ConfigAPIController {
	controller := &ConfigAPIController{
		service:      s,
		errorHandler: runtime.DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the ConfigAPIController
func (c *ConfigAPIController) Routes() runtime.Routes {
	return runtime.Routes{
		"Config": runtime.Route{
			Method:      strings.ToUpper("Get"),
			Pattern:     "/config",
			HandlerFunc: c.Config,
		},
	}
}

// Config - Retrieve backend config
func (c *ConfigAPIController) Config(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.Config(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = runtime.EncodeJSONResponse(result.Body, &result.Code, w)
}
