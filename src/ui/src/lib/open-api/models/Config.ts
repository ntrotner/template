/* tslint:disable */
/* eslint-disable */
/**
 * Swagger - OpenAPI 3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nikita@ttnr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AppConfig } from './AppConfig';
import {
    AppConfigFromJSON,
    AppConfigFromJSONTyped,
    AppConfigToJSON,
    AppConfigToJSONTyped,
} from './AppConfig';
import type { LoggerConfig } from './LoggerConfig';
import {
    LoggerConfigFromJSON,
    LoggerConfigFromJSONTyped,
    LoggerConfigToJSON,
    LoggerConfigToJSONTyped,
} from './LoggerConfig';

/**
 * 
 * @export
 * @interface Config
 */
export interface Config {
    /**
     * 
     * @type {AppConfig}
     * @memberof Config
     */
    app: AppConfig;
    /**
     * 
     * @type {LoggerConfig}
     * @memberof Config
     */
    logger: LoggerConfig;
}

/**
 * Check if a given object implements the Config interface.
 */
export function instanceOfConfig(value: object): value is Config {
    if (!('app' in value) || value['app'] === undefined) return false;
    if (!('logger' in value) || value['logger'] === undefined) return false;
    return true;
}

export function ConfigFromJSON(json: any): Config {
    return ConfigFromJSONTyped(json, false);
}

export function ConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): Config {
    if (json == null) {
        return json;
    }
    return {
        
        'app': AppConfigFromJSON(json['app']),
        'logger': LoggerConfigFromJSON(json['logger']),
    };
}

export function ConfigToJSON(json: any): Config {
    return ConfigToJSONTyped(json, false);
}

export function ConfigToJSONTyped(value?: Config | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'app': AppConfigToJSON(value['app']),
        'logger': LoggerConfigToJSON(value['logger']),
    };
}

